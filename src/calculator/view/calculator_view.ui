<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>CalculatorView</class>
 <widget class="QMainWindow" name="CalculatorView">
  <property name="enabled">
   <bool>true</bool>
  </property>
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>498</width>
    <height>488</height>
   </rect>
  </property>
  <property name="sizePolicy">
   <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
    <horstretch>1</horstretch>
    <verstretch>0</verstretch>
   </sizepolicy>
  </property>
  <property name="minimumSize">
   <size>
    <width>0</width>
    <height>487</height>
   </size>
  </property>
  <property name="windowTitle">
   <string>CalculatorView</string>
  </property>
  <property name="styleSheet">
   <string notr="true">QTabWidget {
    background-color: palette(Window) !important;
    color: palette(WindowText) !important;
    border: 2px solid palette(Link) !important;
    padding: 5px !important;
    padding-top: 18px !important;
    font-family: Arial, sans-serif !important;
    font-weight: bold !important;
}


QTabWidget::pane {
    border: 2px solid palette(link); /* Рамка вокруг QTabWidget */
}

QTabBar::tab:selected {
    background-color: palette(link);
    color: palette(linkVisited);
}
</string>
  </property>
  <widget class="QWidget" name="centralwidget">
   <widget class="QTabWidget" name="tabs">
    <property name="geometry">
     <rect>
      <x>0</x>
      <y>1</y>
      <width>498</width>
      <height>437</height>
     </rect>
    </property>
    <property name="font">
     <font>
      <family>Arial</family>
      <bold>true</bold>
      <stylestrategy>PreferDefault</stylestrategy>
     </font>
    </property>
    <property name="accessibleDescription">
     <string/>
    </property>
    <property name="layoutDirection">
     <enum>Qt::LeftToRight</enum>
    </property>
    <property name="styleSheet">
     <string notr="true">QTabWidget {
    background-color: palette(Window) !important;
    color: palette(WindowText) !important;
    border: 2px solid palette(Link) !important;
    padding: 5px !important;
    padding-top: 18px !important;
    font-family: Arial, sans-serif !important;
    font-weight: bold !important;
}


QTabWidget::pane {
    border: 2px solid palette(link); /* Рамка вокруг QTabWidget */
}

QTabBar::tab:selected {
    background-color: palette(link);
    color: palette(linkVisited);
}
</string>
    </property>
    <property name="tabPosition">
     <enum>QTabWidget::East</enum>
    </property>
    <property name="tabShape">
     <enum>QTabWidget::Triangular</enum>
    </property>
    <property name="currentIndex">
     <number>3</number>
    </property>
    <property name="elideMode">
     <enum>Qt::ElideRight</enum>
    </property>
    <widget class="QWidget" name="Calculator">
     <attribute name="title">
      <string>Calculator</string>
     </attribute>
     <widget class="QLabel" name="output">
      <property name="geometry">
       <rect>
        <x>-2</x>
        <y>-2</y>
        <width>477</width>
        <height>61</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <family>Arial</family>
        <pointsize>15</pointsize>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
    background-color: rgba(0, 0, 0, 0.3); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link); /* Рамка */
    padding: 5px; /* Отступ внутри QLabel */
    padding-top: 18px;
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
</string>
      </property>
      <property name="text">
       <string>0</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
      </property>
      <property name="wordWrap">
       <bool>false</bool>
      </property>
      <property name="margin">
       <number>10</number>
      </property>
      <property name="indent">
       <number>-1</number>
      </property>
      <property name="openExternalLinks">
       <bool>false</bool>
      </property>
     </widget>
     <widget class="QPushButton" name="pb_delete_all">
      <property name="geometry">
       <rect>
        <x>338</x>
        <y>58</y>
        <width>138</width>
        <height>35</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
 background-color: palette(Link); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>Delete all</string>
      </property>
      <property name="shortcut">
       <string>Shift+Backspace</string>
      </property>
     </widget>
     <widget class="QPushButton" name="pb_backspace">
      <property name="geometry">
       <rect>
        <x>406</x>
        <y>93</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: rgba(0, 0, 0, 0.3); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>CE</string>
      </property>
      <property name="shortcut">
       <string>Backspace</string>
      </property>
     </widget>
     <widget class="QPushButton" name="pb_multiplication">
      <property name="geometry">
       <rect>
        <x>406</x>
        <y>161</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>*</string>
      </property>
      <property name="shortcut">
       <string>*</string>
      </property>
      <attribute name="buttonGroup">
       <string notr="true">group_operators</string>
      </attribute>
     </widget>
     <widget class="QPushButton" name="pb_division">
      <property name="geometry">
       <rect>
        <x>406</x>
        <y>229</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>/</string>
      </property>
      <property name="shortcut">
       <string>/</string>
      </property>
      <attribute name="buttonGroup">
       <string notr="true">group_operators</string>
      </attribute>
     </widget>
     <widget class="QPushButton" name="pb_addition">
      <property name="geometry">
       <rect>
        <x>406</x>
        <y>297</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>+</string>
      </property>
      <property name="shortcut">
       <string>+</string>
      </property>
     </widget>
     <widget class="QPushButton" name="pb_subtraction">
      <property name="geometry">
       <rect>
        <x>406</x>
        <y>365</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>-</string>
      </property>
      <property name="shortcut">
       <string>-</string>
      </property>
     </widget>
     <widget class="QPushButton" name="pb_equally">
      <property name="geometry">
       <rect>
        <x>338</x>
        <y>365</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
 background-color: palette(Link); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>=</string>
      </property>
      <property name="shortcut">
       <string>Return</string>
      </property>
     </widget>
     <widget class="QPushButton" name="pb_degree">
      <property name="geometry">
       <rect>
        <x>338</x>
        <y>93</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>^</string>
      </property>
      <property name="shortcut">
       <string>^</string>
      </property>
      <attribute name="buttonGroup">
       <string notr="true">group_operators</string>
      </attribute>
     </widget>
     <widget class="QPushButton" name="pb_right_bracket">
      <property name="geometry">
       <rect>
        <x>202</x>
        <y>93</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>)</string>
      </property>
      <property name="shortcut">
       <string>)</string>
      </property>
     </widget>
     <widget class="QPushButton" name="pb_left_bracket">
      <property name="geometry">
       <rect>
        <x>134</x>
        <y>93</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>(</string>
      </property>
      <property name="shortcut">
       <string>(</string>
      </property>
     </widget>
     <widget class="QPushButton" name="pb_null">
      <property name="geometry">
       <rect>
        <x>202</x>
        <y>365</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: palette(Window); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>0</string>
      </property>
      <property name="shortcut">
       <string>0</string>
      </property>
      <attribute name="buttonGroup">
       <string notr="true">group_nums</string>
      </attribute>
     </widget>
     <widget class="QPushButton" name="pb_one">
      <property name="geometry">
       <rect>
        <x>202</x>
        <y>297</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: palette(Window); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>1</string>
      </property>
      <property name="shortcut">
       <string>1</string>
      </property>
      <attribute name="buttonGroup">
       <string notr="true">group_nums</string>
      </attribute>
     </widget>
     <widget class="QPushButton" name="pb_two">
      <property name="geometry">
       <rect>
        <x>270</x>
        <y>297</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: palette(Window); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>2</string>
      </property>
      <property name="shortcut">
       <string>2</string>
      </property>
      <attribute name="buttonGroup">
       <string notr="true">group_nums</string>
      </attribute>
     </widget>
     <widget class="QPushButton" name="pb_three">
      <property name="geometry">
       <rect>
        <x>338</x>
        <y>297</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: palette(Window); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>3</string>
      </property>
      <property name="shortcut">
       <string>3</string>
      </property>
      <attribute name="buttonGroup">
       <string notr="true">group_nums</string>
      </attribute>
     </widget>
     <widget class="QPushButton" name="pb_point">
      <property name="geometry">
       <rect>
        <x>270</x>
        <y>365</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>.</string>
      </property>
      <property name="shortcut">
       <string>.</string>
      </property>
     </widget>
     <widget class="QPushButton" name="pb_five">
      <property name="geometry">
       <rect>
        <x>269</x>
        <y>229</y>
        <width>71</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: palette(Window); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>5</string>
      </property>
      <property name="shortcut">
       <string>5</string>
      </property>
      <attribute name="buttonGroup">
       <string notr="true">group_nums</string>
      </attribute>
     </widget>
     <widget class="QPushButton" name="pb_six">
      <property name="geometry">
       <rect>
        <x>338</x>
        <y>229</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: palette(Window); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>6</string>
      </property>
      <property name="shortcut">
       <string>6</string>
      </property>
      <attribute name="buttonGroup">
       <string notr="true">group_nums</string>
      </attribute>
     </widget>
     <widget class="QPushButton" name="pb_four">
      <property name="geometry">
       <rect>
        <x>202</x>
        <y>229</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: palette(Window); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>4</string>
      </property>
      <property name="shortcut">
       <string>4</string>
      </property>
      <attribute name="buttonGroup">
       <string notr="true">group_nums</string>
      </attribute>
     </widget>
     <widget class="QPushButton" name="pb_eight">
      <property name="geometry">
       <rect>
        <x>270</x>
        <y>161</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: palette(Window); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>8</string>
      </property>
      <property name="shortcut">
       <string>8</string>
      </property>
      <attribute name="buttonGroup">
       <string notr="true">group_nums</string>
      </attribute>
     </widget>
     <widget class="QPushButton" name="pb_nine">
      <property name="geometry">
       <rect>
        <x>338</x>
        <y>161</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: palette(Window); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>9</string>
      </property>
      <property name="shortcut">
       <string>9</string>
      </property>
      <attribute name="buttonGroup">
       <string notr="true">group_nums</string>
      </attribute>
     </widget>
     <widget class="QPushButton" name="pb_seven">
      <property name="geometry">
       <rect>
        <x>202</x>
        <y>161</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: palette(Window); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>7</string>
      </property>
      <property name="shortcut">
       <string>7</string>
      </property>
      <attribute name="buttonGroup">
       <string notr="true">group_nums</string>
      </attribute>
     </widget>
     <widget class="QPushButton" name="pb_atan">
      <property name="geometry">
       <rect>
        <x>134</x>
        <y>161</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>arctan</string>
      </property>
      <property name="shortcut">
       <string>A, T</string>
      </property>
      <attribute name="buttonGroup">
       <string notr="true">group_functions</string>
      </attribute>
     </widget>
     <widget class="QPushButton" name="pb_acos">
      <property name="geometry">
       <rect>
        <x>66</x>
        <y>161</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>arccos</string>
      </property>
      <property name="shortcut">
       <string>A, C</string>
      </property>
      <attribute name="buttonGroup">
       <string notr="true">group_functions</string>
      </attribute>
     </widget>
     <widget class="QPushButton" name="pb_asin">
      <property name="geometry">
       <rect>
        <x>-2</x>
        <y>161</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>arcsin</string>
      </property>
      <property name="shortcut">
       <string>A, S</string>
      </property>
      <attribute name="buttonGroup">
       <string notr="true">group_functions</string>
      </attribute>
     </widget>
     <widget class="QPushButton" name="pb_tan">
      <property name="geometry">
       <rect>
        <x>134</x>
        <y>229</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>tan</string>
      </property>
      <property name="shortcut">
       <string>T</string>
      </property>
      <attribute name="buttonGroup">
       <string notr="true">group_functions</string>
      </attribute>
     </widget>
     <widget class="QPushButton" name="pb_sin">
      <property name="geometry">
       <rect>
        <x>-2</x>
        <y>229</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>sin</string>
      </property>
      <property name="shortcut">
       <string>S</string>
      </property>
      <attribute name="buttonGroup">
       <string notr="true">group_functions</string>
      </attribute>
     </widget>
     <widget class="QPushButton" name="pb_cos">
      <property name="geometry">
       <rect>
        <x>66</x>
        <y>229</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>cos</string>
      </property>
      <property name="shortcut">
       <string>C</string>
      </property>
      <attribute name="buttonGroup">
       <string notr="true">group_functions</string>
      </attribute>
     </widget>
     <widget class="QPushButton" name="pb_radical">
      <property name="geometry">
       <rect>
        <x>270</x>
        <y>93</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>√</string>
      </property>
      <property name="shortcut">
       <string>S, Q</string>
      </property>
     </widget>
     <widget class="QPushButton" name="pb_ln">
      <property name="geometry">
       <rect>
        <x>66</x>
        <y>93</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>ln</string>
      </property>
      <property name="shortcut">
       <string>L, N</string>
      </property>
      <attribute name="buttonGroup">
       <string notr="true">group_functions</string>
      </attribute>
     </widget>
     <widget class="QPushButton" name="pb_log">
      <property name="geometry">
       <rect>
        <x>-2</x>
        <y>93</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>log</string>
      </property>
      <property name="shortcut">
       <string>L, O</string>
      </property>
      <attribute name="buttonGroup">
       <string notr="true">group_functions</string>
      </attribute>
     </widget>
     <widget class="QPushButton" name="pb_exp">
      <property name="geometry">
       <rect>
        <x>-2</x>
        <y>297</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>EXP</string>
      </property>
      <property name="shortcut">
       <string>Shift+E</string>
      </property>
     </widget>
     <widget class="QPushButton" name="pb_mod">
      <property name="geometry">
       <rect>
        <x>-2</x>
        <y>365</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>mod</string>
      </property>
      <property name="shortcut">
       <string>X</string>
      </property>
     </widget>
     <widget class="QPushButton" name="pb_pi">
      <property name="geometry">
       <rect>
        <x>134</x>
        <y>297</y>
        <width>70</width>
        <height>70</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>pi</string>
      </property>
      <property name="shortcut">
       <string>P, I</string>
      </property>
      <attribute name="buttonGroup">
       <string notr="true">group_const</string>
      </attribute>
     </widget>
     <widget class="QLabel" name="max_size">
      <property name="geometry">
       <rect>
        <x>440</x>
        <y>6</y>
        <width>31</width>
        <height>16</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <family>Arial</family>
        <pointsize>11</pointsize>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта *</string>
      </property>
      <property name="text">
       <string>/ 255</string>
      </property>
     </widget>
     <widget class="QLabel" name="size_symbols">
      <property name="geometry">
       <rect>
        <x>407</x>
        <y>6</y>
        <width>31</width>
        <height>16</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <family>Arial</family>
        <pointsize>11</pointsize>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта *</string>
      </property>
      <property name="text">
       <string>1</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
      </property>
     </widget>
     <widget class="QPushButton" name="pb_meow">
      <property name="geometry">
       <rect>
        <x>-2</x>
        <y>57</y>
        <width>138</width>
        <height>38</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
 background-color: palette(Window); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>^._.^</string>
      </property>
      <property name="shortcut">
       <string>Shift+Backspace</string>
      </property>
     </widget>
     <widget class="QPushButton" name="pb_x">
      <property name="geometry">
       <rect>
        <x>67</x>
        <y>296</y>
        <width>70</width>
        <height>71</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <family>Arial</family>
        <pointsize>16</pointsize>
        <bold>true</bold>
       </font>
      </property>
      <property name="toolTipDuration">
       <number>8</number>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>x</string>
      </property>
      <property name="shortcut">
       <string>X</string>
      </property>
      <attribute name="buttonGroup">
       <string notr="true">group_const</string>
      </attribute>
     </widget>
     <widget class="QLabel" name="text_x">
      <property name="geometry">
       <rect>
        <x>66</x>
        <y>365</y>
        <width>138</width>
        <height>70</height>
       </rect>
      </property>
      <property name="sizeIncrement">
       <size>
        <width>0</width>
        <height>0</height>
       </size>
      </property>
      <property name="font">
       <font>
        <family>Arial</family>
        <bold>true</bold>
       </font>
      </property>
      <property name="toolTipDuration">
       <number>7</number>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

</string>
      </property>
      <property name="text">
       <string>x =</string>
      </property>
     </widget>
     <widget class="QLineEdit" name="value_x">
      <property name="geometry">
       <rect>
        <x>103</x>
        <y>365</y>
        <width>101</width>
        <height>70</height>
       </rect>
      </property>
      <property name="layoutDirection">
       <enum>Qt::LeftToRight</enum>
      </property>
      <property name="styleSheet">
       <string notr="true">QLineEdit {
   background-color: rgba(0, 0, 0, 0); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
	border: 0px;
    padding: 5px;
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QLineEdit:hover {
    color: palette(link);
}
</string>
      </property>
      <property name="text">
       <string> 0.0</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
      </property>
     </widget>
    </widget>
    <widget class="QWidget" name="tab_2">
     <attribute name="title">
      <string>Graphic</string>
     </attribute>
     <widget class="QCustomPlot" name="my_graphic" native="true">
      <property name="geometry">
       <rect>
        <x>84</x>
        <y>-2</y>
        <width>391</width>
        <height>437</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QWidget {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QWidget:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QWidget:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QWindget:focus {
    outline: none;
}</string>
      </property>
     </widget>
     <widget class="QDoubleSpinBox" name="x_min">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>69</y>
        <width>62</width>
        <height>22</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QDubleSpinBox {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QDoubleSpinBox:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QDoubleSpinBox:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QDoubleSpinBox:focus {
    outline: none;
}</string>
      </property>
      <property name="minimum">
       <double>-1000000.000000000000000</double>
      </property>
      <property name="maximum">
       <double>1000000.000000000000000</double>
      </property>
      <property name="value">
       <double>-10.000000000000000</double>
      </property>
     </widget>
     <widget class="QDoubleSpinBox" name="x_max">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>137</y>
        <width>62</width>
        <height>22</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QDubleSpinBox {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QDoubleSpinBox:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QDoubleSpinBox:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QDoubleSpinBox:focus {
    outline: none;
}</string>
      </property>
      <property name="minimum">
       <double>-1000000.000000000000000</double>
      </property>
      <property name="maximum">
       <double>1000000.000000000000000</double>
      </property>
      <property name="value">
       <double>10.000000000000000</double>
      </property>
     </widget>
     <widget class="QDoubleSpinBox" name="y_min">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>202</y>
        <width>62</width>
        <height>22</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QDubleSpinBox {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QDoubleSpinBox:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QDoubleSpinBox:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QDoubleSpinBox:focus {
    outline: none;
}</string>
      </property>
      <property name="minimum">
       <double>-1000000.000000000000000</double>
      </property>
      <property name="maximum">
       <double>1000000.000000000000000</double>
      </property>
      <property name="value">
       <double>-10.000000000000000</double>
      </property>
     </widget>
     <widget class="QDoubleSpinBox" name="y_max">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>263</y>
        <width>62</width>
        <height>22</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QDubleSpinBox {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QDoubleSpinBox:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QDoubleSpinBox:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QDoubleSpinBox:focus {
    outline: none;
}</string>
      </property>
      <property name="minimum">
       <double>-1000000.000000000000000</double>
      </property>
      <property name="maximum">
       <double>1000000.000000000000000</double>
      </property>
      <property name="value">
       <double>10.000000000000000</double>
      </property>
     </widget>
     <widget class="QLabel" name="x_min_text">
      <property name="geometry">
       <rect>
        <x>14</x>
        <y>48</y>
        <width>61</width>
        <height>20</height>
       </rect>
      </property>
      <property name="text">
       <string>x min</string>
      </property>
     </widget>
     <widget class="QLabel" name="x_max_text">
      <property name="geometry">
       <rect>
        <x>14</x>
        <y>114</y>
        <width>61</width>
        <height>20</height>
       </rect>
      </property>
      <property name="text">
       <string>x max</string>
      </property>
     </widget>
     <widget class="QLabel" name="y_min_text">
      <property name="geometry">
       <rect>
        <x>14</x>
        <y>181</y>
        <width>61</width>
        <height>20</height>
       </rect>
      </property>
      <property name="text">
       <string>y min</string>
      </property>
     </widget>
     <widget class="QLabel" name="y_max_text">
      <property name="geometry">
       <rect>
        <x>14</x>
        <y>240</y>
        <width>61</width>
        <height>20</height>
       </rect>
      </property>
      <property name="text">
       <string>y max</string>
      </property>
     </widget>
     <widget class="QPushButton" name="add_graph">
      <property name="geometry">
       <rect>
        <x>-3</x>
        <y>350</y>
        <width>86</width>
        <height>41</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <family>Arial</family>
        <pointsize>16</pointsize>
        <bold>true</bold>
       </font>
      </property>
      <property name="toolTipDuration">
       <number>8</number>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>+</string>
      </property>
      <property name="shortcut">
       <string>X</string>
      </property>
     </widget>
     <widget class="QPushButton" name="clear_graph">
      <property name="geometry">
       <rect>
        <x>-5</x>
        <y>389</y>
        <width>88</width>
        <height>46</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <family>Arial</family>
        <pointsize>16</pointsize>
        <bold>true</bold>
       </font>
      </property>
      <property name="toolTipDuration">
       <number>8</number>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>clear</string>
      </property>
      <property name="shortcut">
       <string>X</string>
      </property>
     </widget>
     <widget class="QCheckBox" name="open_value_x">
      <property name="geometry">
       <rect>
        <x>5</x>
        <y>10</y>
        <width>71</width>
        <height>20</height>
       </rect>
      </property>
      <property name="text">
       <string>value x</string>
      </property>
     </widget>
     <widget class="QDoubleSpinBox" name="eps">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>320</y>
        <width>62</width>
        <height>16</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QDubleSpinBox {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QDoubleSpinBox:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QDoubleSpinBox:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QDoubleSpinBox:focus {
    outline: none;
}</string>
      </property>
      <property name="decimals">
       <number>3</number>
      </property>
      <property name="minimum">
       <double>0.000000000000000</double>
      </property>
      <property name="maximum">
       <double>1000000.000000000000000</double>
      </property>
      <property name="value">
       <double>0.100000000000000</double>
      </property>
     </widget>
     <widget class="QLabel" name="eps_text">
      <property name="geometry">
       <rect>
        <x>14</x>
        <y>300</y>
        <width>61</width>
        <height>20</height>
       </rect>
      </property>
      <property name="text">
       <string>eps</string>
      </property>
     </widget>
    </widget>
    <widget class="QWidget" name="Graphics">
     <attribute name="title">
      <string>Credic Calc</string>
     </attribute>
     <widget class="QLabel" name="loan_amount_text">
      <property name="geometry">
       <rect>
        <x>30</x>
        <y>20</y>
        <width>411</width>
        <height>35</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
    background-color: rgba(0, 0, 0, 0.3); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link); /* Рамка */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
</string>
      </property>
      <property name="text">
       <string>Loan amount:</string>
      </property>
     </widget>
     <widget class="QLabel" name="loan_term_text">
      <property name="geometry">
       <rect>
        <x>30</x>
        <y>70</y>
        <width>411</width>
        <height>35</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
    background-color: rgba(0, 0, 0, 0.3); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link); /* Рамка */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
</string>
      </property>
      <property name="text">
       <string>Loan term:</string>
      </property>
     </widget>
     <widget class="QComboBox" name="menu_period">
      <property name="geometry">
       <rect>
        <x>350</x>
        <y>70</y>
        <width>91</width>
        <height>35</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QComboBox {
    background-color: rgba(0, 0, 0, 0);
    border: 2px solid palette(Link);
    color: palette(WindowText); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
 
QComboBox:hover {
    background-color:  rgba(0, 0, 0, 0);
    border: 2px solid palette(Link);
    color: palette(Link); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
</string>
      </property>
      <item>
       <property name="text">
        <string>months</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>years</string>
       </property>
      </item>
     </widget>
     <widget class="QLabel" name="credit_interest_rate_text">
      <property name="geometry">
       <rect>
        <x>30</x>
        <y>120</y>
        <width>411</width>
        <height>35</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
    background-color: rgba(0, 0, 0, 0.3); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link); /* Рамка */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
</string>
      </property>
      <property name="text">
       <string>Interest rate per year:</string>
      </property>
     </widget>
     <widget class="QLabel" name="type_payments">
      <property name="geometry">
       <rect>
        <x>30</x>
        <y>170</y>
        <width>411</width>
        <height>35</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
    background-color: rgba(0, 0, 0, 0.3); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link); /* Рамка */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
</string>
      </property>
      <property name="text">
       <string>Type of monthly payments</string>
      </property>
     </widget>
     <widget class="QComboBox" name="credit_menu_type">
      <property name="geometry">
       <rect>
        <x>220</x>
        <y>170</y>
        <width>221</width>
        <height>35</height>
       </rect>
      </property>
      <property name="layoutDirection">
       <enum>Qt::LeftToRight</enum>
      </property>
      <property name="styleSheet">
       <string notr="true">QComboBox {
    background-color: rgba(0, 0, 0, 0);
    border: 2px solid palette(Link);
    color: palette(WindowText); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
 
QComboBox:hover {
    background-color:  rgba(0, 0, 0, 0);
    border: 2px solid palette(Link);
    color: palette(Link); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
</string>
      </property>
      <item>
       <property name="text">
        <string>annuity</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>differentiated</string>
       </property>
      </item>
     </widget>
     <widget class="QPushButton" name="pb_credit_result">
      <property name="geometry">
       <rect>
        <x>300</x>
        <y>360</y>
        <width>141</width>
        <height>35</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
 background-color: palette(Link); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>result</string>
      </property>
      <property name="shortcut">
       <string>Shift+Backspace</string>
      </property>
     </widget>
     <widget class="QLabel" name="text_procent">
      <property name="geometry">
       <rect>
        <x>419</x>
        <y>120</y>
        <width>21</width>
        <height>33</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLineEdit {
    background-color: rgba(0, 0, 0, 0);
    border: none;
    color: palette(WindowText); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}</string>
      </property>
      <property name="text">
       <string>%</string>
      </property>
     </widget>
     <widget class="QLabel" name="credit_result_frame">
      <property name="geometry">
       <rect>
        <x>30</x>
        <y>230</y>
        <width>411</width>
        <height>131</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
    background-color: rgba(0, 0, 0, 0.3); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link); /* Рамка */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
</string>
      </property>
      <property name="text">
       <string notr="true"> Total result:</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignTop</set>
      </property>
     </widget>
     <widget class="QLabel" name="mounthly_payment_text">
      <property name="geometry">
       <rect>
        <x>60</x>
        <y>260</y>
        <width>131</width>
        <height>31</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <family>Arial</family>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
    background-color: rgba(0, 0, 0, 0);
    border: none;
    color: palette(WindowText); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

</string>
      </property>
      <property name="text">
       <string>mounthly payment:</string>
      </property>
     </widget>
     <widget class="QLabel" name="overpayment_text">
      <property name="geometry">
       <rect>
        <x>60</x>
        <y>290</y>
        <width>101</width>
        <height>31</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <family>Arial</family>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
    background-color: rgba(0, 0, 0, 0);
    border: none;
    color: palette(WindowText); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

</string>
      </property>
      <property name="text">
       <string>overpayment:</string>
      </property>
     </widget>
     <widget class="QLabel" name="total_payout">
      <property name="geometry">
       <rect>
        <x>60</x>
        <y>320</y>
        <width>101</width>
        <height>31</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <family>Arial</family>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
    background-color: rgba(0, 0, 0, 0);
    border: none;
    color: palette(WindowText); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

</string>
      </property>
      <property name="text">
       <string>total payout:</string>
      </property>
     </widget>
     <widget class="QLineEdit" name="mounthly_payment_value">
      <property name="geometry">
       <rect>
        <x>190</x>
        <y>260</y>
        <width>241</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLineEdit {
    background-color: rgba(0, 0, 0, 0);
    border: none;
    color: palette(WindowText); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

QLineEdit:hover {
    background-color: rgba(0, 0, 0, 0);
    border: none;
    color: palette(Link); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}</string>
      </property>
      <property name="text">
       <string>0</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
      </property>
      <property name="readOnly">
       <bool>true</bool>
      </property>
     </widget>
     <widget class="QLineEdit" name="overpayment_value">
      <property name="geometry">
       <rect>
        <x>160</x>
        <y>290</y>
        <width>271</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLineEdit {
    background-color: rgba(0, 0, 0, 0);
    border: none;
    color: palette(WindowText); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

QLineEdit:hover {
    background-color: rgba(0, 0, 0, 0);
    border: none;
    color: palette(Link); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}</string>
      </property>
      <property name="text">
       <string>0</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
      </property>
     </widget>
     <widget class="QLineEdit" name="total_payout_value">
      <property name="geometry">
       <rect>
        <x>150</x>
        <y>320</y>
        <width>281</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLineEdit {
    background-color: rgba(0, 0, 0, 0);
    border: none;
    color: palette(WindowText); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

QLineEdit:hover {
    background-color: rgba(0, 0, 0, 0);
    border: none;
    color: palette(Link); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}</string>
      </property>
      <property name="text">
       <string>0</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
      </property>
     </widget>
     <widget class="QDoubleSpinBox" name="credit_amount_value">
      <property name="geometry">
       <rect>
        <x>140</x>
        <y>20</y>
        <width>297</width>
        <height>35</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QDubleSpinBox {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QDoubleSpinBox:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QDoubleSpinBox:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QDoubleSpinBox:focus {
    outline: none;
}</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
      </property>
      <property name="minimum">
       <double>0.000000000000000</double>
      </property>
      <property name="maximum">
       <double>1000000000000.000000000000000</double>
      </property>
      <property name="value">
       <double>0.000000000000000</double>
      </property>
     </widget>
     <widget class="QDoubleSpinBox" name="credit_period_value">
      <property name="geometry">
       <rect>
        <x>116</x>
        <y>70</y>
        <width>231</width>
        <height>35</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QDubleSpinBox {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QDoubleSpinBox:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QDoubleSpinBox:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QDoubleSpinBox:focus {
    outline: none;
}</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
      </property>
      <property name="decimals">
       <number>0</number>
      </property>
      <property name="minimum">
       <double>0.000000000000000</double>
      </property>
      <property name="maximum">
       <double>50000.000000000000000</double>
      </property>
      <property name="value">
       <double>0.000000000000000</double>
      </property>
     </widget>
     <widget class="QDoubleSpinBox" name="credit_interest_rate_value">
      <property name="geometry">
       <rect>
        <x>180</x>
        <y>120</y>
        <width>231</width>
        <height>35</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QDubleSpinBox {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QDoubleSpinBox:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QDoubleSpinBox:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QDoubleSpinBox:focus {
    outline: none;
}</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
      </property>
      <property name="decimals">
       <number>2</number>
      </property>
      <property name="minimum">
       <double>0.000000000000000</double>
      </property>
      <property name="maximum">
       <double>100.000000000000000</double>
      </property>
      <property name="value">
       <double>0.000000000000000</double>
      </property>
     </widget>
    </widget>
    <widget class="QWidget" name="tab">
     <attribute name="title">
      <string>Deposit Calc</string>
     </attribute>
     <widget class="QLabel" name="deposit_amount_text">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>10</y>
        <width>451</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
    background-color: rgba(0, 0, 0, 0.3); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link); /* Рамка */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
</string>
      </property>
      <property name="text">
       <string>Deposit amount:</string>
      </property>
     </widget>
     <widget class="QLabel" name="beginning_of_the_term_text">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>50</y>
        <width>451</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
    background-color: rgba(0, 0, 0, 0.3); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link); /* Рамка */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
</string>
      </property>
      <property name="text">
       <string>The beginning of the term:</string>
      </property>
     </widget>
     <widget class="QDateEdit" name="begin_date">
      <property name="geometry">
       <rect>
        <x>200</x>
        <y>50</y>
        <width>261</width>
        <height>31</height>
       </rect>
      </property>
      <property name="layoutDirection">
       <enum>Qt::LeftToRight</enum>
      </property>
      <property name="styleSheet">
       <string notr="true">QDateEdit {
    background-color: rgba(0, 0, 0, 0);
    border: 2px solid palette(Link);
    color: palette(WindowText); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
 
QDateEdit:hover {
    background-color:  rgba(0, 0, 0, 0);
    border: 2px solid palette(Link);
    color: palette(Link); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
      </property>
      <property name="dateTime">
       <datetime>
        <hour>0</hour>
        <minute>0</minute>
        <second>0</second>
        <year>2023</year>
        <month>9</month>
        <day>10</day>
       </datetime>
      </property>
      <property name="displayFormat">
       <string>d/M/yy</string>
      </property>
     </widget>
     <widget class="QLabel" name="deposit_interest_rate_text">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>130</y>
        <width>261</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
    background-color: rgba(0, 0, 0, 0.3); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link); /* Рамка */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
</string>
      </property>
      <property name="text">
       <string>Interest rate per year:</string>
      </property>
     </widget>
     <widget class="QLabel" name="text_procent_two">
      <property name="geometry">
       <rect>
        <x>250</x>
        <y>130</y>
        <width>21</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLineEdit {
    background-color: rgba(0, 0, 0, 0);
    border: none;
    color: palette(WindowText); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}</string>
      </property>
      <property name="text">
       <string>%</string>
      </property>
     </widget>
     <widget class="QLabel" name="ending_of_the_term_text">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>90</y>
        <width>451</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
    background-color: rgba(0, 0, 0, 0.3); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link); /* Рамка */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
</string>
      </property>
      <property name="text">
       <string>The edinning of the term:</string>
      </property>
     </widget>
     <widget class="QDateEdit" name="ending_date">
      <property name="geometry">
       <rect>
        <x>200</x>
        <y>90</y>
        <width>261</width>
        <height>31</height>
       </rect>
      </property>
      <property name="layoutDirection">
       <enum>Qt::LeftToRight</enum>
      </property>
      <property name="styleSheet">
       <string notr="true">QDateEdit {
    background-color: rgba(0, 0, 0, 0);
    border: 2px solid palette(Link);
    color: palette(WindowText); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
 
QDateEdit:hover {
    background-color:  rgba(0, 0, 0, 0);
    border: 2px solid palette(Link);
    color: palette(Link); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
      </property>
      <property name="dateTime">
       <datetime>
        <hour>0</hour>
        <minute>0</minute>
        <second>0</second>
        <year>2023</year>
        <month>10</month>
        <day>10</day>
       </datetime>
      </property>
      <property name="displayFormat">
       <string>d/M/yy</string>
      </property>
     </widget>
     <widget class="QLabel" name="tax_rate_text">
      <property name="geometry">
       <rect>
        <x>270</x>
        <y>130</y>
        <width>191</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
    background-color: rgba(0, 0, 0, 0.3); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link); /* Рамка */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
</string>
      </property>
      <property name="text">
       <string>tax rate:</string>
      </property>
     </widget>
     <widget class="QLabel" name="text_procent_three">
      <property name="geometry">
       <rect>
        <x>440</x>
        <y>130</y>
        <width>20</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLineEdit {
    background-color: rgba(0, 0, 0, 0);
    border: none;
    color: palette(WindowText); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}</string>
      </property>
      <property name="text">
       <string>%</string>
      </property>
     </widget>
     <widget class="QCheckBox" name="capitalization">
      <property name="geometry">
       <rect>
        <x>30</x>
        <y>170</y>
        <width>151</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QCheckBox {
    background-color: rgba(0, 0, 0, 0);
    border: none;
    color: palette(WindowText); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}</string>
      </property>
      <property name="text">
       <string>Capitalization</string>
      </property>
     </widget>
     <widget class="QLabel" name="deposit_text">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>210</y>
        <width>451</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
    background-color: rgba(0, 0, 0, 0.3); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link); /* Рамка */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
</string>
      </property>
      <property name="text">
       <string>contribution:</string>
      </property>
     </widget>
     <widget class="QLabel" name="withdrawal_text">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>250</y>
        <width>451</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
    background-color: rgba(0, 0, 0, 0.3); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link); /* Рамка */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
</string>
      </property>
      <property name="text">
       <string>withdrawal:</string>
      </property>
     </widget>
     <widget class="QComboBox" name="deposit_mode">
      <property name="geometry">
       <rect>
        <x>110</x>
        <y>210</y>
        <width>111</width>
        <height>31</height>
       </rect>
      </property>
      <property name="layoutDirection">
       <enum>Qt::LeftToRight</enum>
      </property>
      <property name="styleSheet">
       <string notr="true">QComboBox {
    background-color: rgba(0, 0, 0, 0);
    border: 2px solid palette(Link);
    color: palette(WindowText); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
 
QComboBox:hover {
    background-color:  rgba(0, 0, 0, 0);
    border: 2px solid palette(Link);
    color: palette(Link); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
</string>
      </property>
      <item>
       <property name="text">
        <string>every_day</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>every month</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>quarter of a year</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>every six months</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>once a year</string>
       </property>
      </item>
     </widget>
     <widget class="QComboBox" name="withdrawal_mode">
      <property name="geometry">
       <rect>
        <x>110</x>
        <y>250</y>
        <width>111</width>
        <height>31</height>
       </rect>
      </property>
      <property name="layoutDirection">
       <enum>Qt::LeftToRight</enum>
      </property>
      <property name="styleSheet">
       <string notr="true">QComboBox {
    background-color: rgba(0, 0, 0, 0);
    border: 2px solid palette(Link);
    color: palette(WindowText); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
 
QComboBox:hover {
    background-color:  rgba(0, 0, 0, 0);
    border: 2px solid palette(Link);
    color: palette(Link); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
</string>
      </property>
      <item>
       <property name="text">
        <string>every_day</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>every month</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>quarter of a year</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>every six months</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>once a year</string>
       </property>
      </item>
     </widget>
     <widget class="QLabel" name="interest_rate_8">
      <property name="geometry">
       <rect>
        <x>10</x>
        <y>310</y>
        <width>451</width>
        <height>81</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
    background-color: rgba(0, 0, 0, 0.3); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link); /* Рамка */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
</string>
      </property>
      <property name="text">
       <string notr="true"/>
      </property>
      <property name="alignment">
       <set>Qt::AlignLeading|Qt::AlignLeft|Qt::AlignTop</set>
      </property>
     </widget>
     <widget class="QLabel" name="tax_text">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>340</y>
        <width>131</width>
        <height>21</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <family>Arial</family>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
    background-color: rgba(0, 0, 0, 0);
    border: none;
    color: palette(WindowText); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

</string>
      </property>
      <property name="text">
       <string>tax:</string>
      </property>
     </widget>
     <widget class="QLabel" name="total_amount_text">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>360</y>
        <width>111</width>
        <height>31</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <family>Arial</family>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
    background-color: rgba(0, 0, 0, 0);
    border: none;
    color: palette(WindowText); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

</string>
      </property>
      <property name="text">
       <string>total amount:</string>
      </property>
     </widget>
     <widget class="QLabel" name="accrued_interest_text">
      <property name="geometry">
       <rect>
        <x>20</x>
        <y>311</y>
        <width>131</width>
        <height>31</height>
       </rect>
      </property>
      <property name="font">
       <font>
        <family>Arial</family>
        <bold>true</bold>
       </font>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
    background-color: rgba(0, 0, 0, 0);
    border: none;
    color: palette(WindowText); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

</string>
      </property>
      <property name="text">
       <string>accrued interest:</string>
      </property>
     </widget>
     <widget class="QLineEdit" name="accrued_interest_result">
      <property name="geometry">
       <rect>
        <x>140</x>
        <y>311</y>
        <width>321</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLineEdit {
    background-color: rgba(0, 0, 0, 0);
    border: none;
    color: palette(WindowText); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

QLineEdit:hover {
    background-color: rgba(0, 0, 0, 0);
    border: none;
    color: palette(Link); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}</string>
      </property>
      <property name="text">
       <string>0</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
      </property>
     </widget>
     <widget class="QLineEdit" name="tax_result">
      <property name="geometry">
       <rect>
        <x>130</x>
        <y>341</y>
        <width>331</width>
        <height>20</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLineEdit {
    background-color: rgba(0, 0, 0, 0);
    border: none;
    color: palette(WindowText); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

QLineEdit:hover {
    background-color: rgba(0, 0, 0, 0);
    border: none;
    color: palette(Link); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}</string>
      </property>
      <property name="text">
       <string>0</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
      </property>
     </widget>
     <widget class="QLineEdit" name="total_amount_result">
      <property name="geometry">
       <rect>
        <x>120</x>
        <y>360</y>
        <width>341</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLineEdit {
    background-color: rgba(0, 0, 0, 0);
    border: none;
    color: palette(WindowText); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

QLineEdit:hover {
    background-color: rgba(0, 0, 0, 0);
    border: none;
    color: palette(Link); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}</string>
      </property>
      <property name="text">
       <string>0</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
      </property>
     </widget>
     <widget class="QPushButton" name="deposit_result">
      <property name="geometry">
       <rect>
        <x>320</x>
        <y>390</y>
        <width>141</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QPushButton {
 background-color: palette(Link); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QPushButton:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QPushButton:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QPushButton:focus {
    outline: none;
}</string>
      </property>
      <property name="text">
       <string>result</string>
      </property>
      <property name="shortcut">
       <string>Shift+Backspace</string>
      </property>
     </widget>
     <widget class="QLabel" name="frequenc_of_payments_text">
      <property name="geometry">
       <rect>
        <x>180</x>
        <y>170</y>
        <width>281</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QLabel {
    background-color: rgba(0, 0, 0, 0.3); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link); /* Рамка */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
</string>
      </property>
      <property name="text">
       <string>frequency of payments: </string>
      </property>
     </widget>
     <widget class="QComboBox" name="frequenct_mode">
      <property name="geometry">
       <rect>
        <x>340</x>
        <y>170</y>
        <width>121</width>
        <height>31</height>
       </rect>
      </property>
      <property name="layoutDirection">
       <enum>Qt::LeftToRight</enum>
      </property>
      <property name="styleSheet">
       <string notr="true">QComboBox {
    background-color: rgba(0, 0, 0, 0);
    border: 2px solid palette(Link);
    color: palette(WindowText); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
 
QComboBox:hover {
    background-color:  rgba(0, 0, 0, 0);
    border: 2px solid palette(Link);
    color: palette(Link); /* Цвет текста */
    padding: 5px; /* Отступ внутри QLabel */
    font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}
</string>
      </property>
      <item>
       <property name="text">
        <string>every day</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>every month</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>quarter of a year</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>every six months</string>
       </property>
      </item>
      <item>
       <property name="text">
        <string>once a year</string>
       </property>
      </item>
     </widget>
     <widget class="QDoubleSpinBox" name="deposit_amount_value">
      <property name="geometry">
       <rect>
        <x>130</x>
        <y>10</y>
        <width>331</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QDubleSpinBox {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QDoubleSpinBox:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QDoubleSpinBox:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QDoubleSpinBox:focus {
    outline: none;
}</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
      </property>
      <property name="decimals">
       <number>2</number>
      </property>
      <property name="minimum">
       <double>0.000000000000000</double>
      </property>
      <property name="maximum">
       <double>100000000000.000000000000000</double>
      </property>
      <property name="value">
       <double>0.000000000000000</double>
      </property>
     </widget>
     <widget class="QDoubleSpinBox" name="deposit_interest_rate">
      <property name="geometry">
       <rect>
        <x>160</x>
        <y>130</y>
        <width>81</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QDubleSpinBox {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QDoubleSpinBox:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QDoubleSpinBox:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QDoubleSpinBox:focus {
    outline: none;
}</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
      </property>
      <property name="decimals">
       <number>2</number>
      </property>
      <property name="minimum">
       <double>0.000000000000000</double>
      </property>
      <property name="maximum">
       <double>100.000000000000000</double>
      </property>
      <property name="value">
       <double>0.000000000000000</double>
      </property>
     </widget>
     <widget class="QDoubleSpinBox" name="deposit_tax_rate">
      <property name="geometry">
       <rect>
        <x>350</x>
        <y>130</y>
        <width>81</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QDubleSpinBox {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QDoubleSpinBox:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QDoubleSpinBox:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QDoubleSpinBox:focus {
    outline: none;
}</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
      </property>
      <property name="decimals">
       <number>2</number>
      </property>
      <property name="minimum">
       <double>0.000000000000000</double>
      </property>
      <property name="maximum">
       <double>100.000000000000000</double>
      </property>
      <property name="value">
       <double>0.000000000000000</double>
      </property>
     </widget>
     <widget class="QDoubleSpinBox" name="deposit_value">
      <property name="geometry">
       <rect>
        <x>220</x>
        <y>210</y>
        <width>241</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QDubleSpinBox {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QDoubleSpinBox:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QDoubleSpinBox:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QDoubleSpinBox:focus {
    outline: none;
}</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
      </property>
      <property name="decimals">
       <number>2</number>
      </property>
      <property name="minimum">
       <double>0.000000000000000</double>
      </property>
      <property name="maximum">
       <double>100000000000.000000000000000</double>
      </property>
      <property name="value">
       <double>0.000000000000000</double>
      </property>
     </widget>
     <widget class="QDoubleSpinBox" name="deposit_withdrawal">
      <property name="geometry">
       <rect>
        <x>220</x>
        <y>250</y>
        <width>241</width>
        <height>31</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">QDubleSpinBox {
   background-color: rgba(0, 0, 0, 0.2); /* Задний план */
    color: palette(WindowText); /* Цвет текста */
    border: 2px solid palette(Link);
    padding: 5px;
   font-family: Arial, sans-serif;
    font-weight: bold; /* Для пожирнения шрифта */
}

/* При наведении на кнопку */
QDoubleSpinBox:hover {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(Link); /* Бледная обводка */
}

/* При нажатии на кнопку */
QDoubleSpinBox:pressed {
    background-color: palette(button);
    color: palette(link);
    border: 2px solid palette(mid); /* Бледная обводка */
    border-top: 4px solid palette(link); /* Добавляем верхнюю границу */
    border-right: 4px solid palette(link);
    border-left: 4px solid palette(link);
    border-bottom: 4px solid palette(link);
}

/* Убираем фокусовку (при клике не будет выделяться синяя рамка) */
QDoubleSpinBox:focus {
    outline: none;
}</string>
      </property>
      <property name="alignment">
       <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
      </property>
      <property name="decimals">
       <number>2</number>
      </property>
      <property name="minimum">
       <double>0.000000000000000</double>
      </property>
      <property name="maximum">
       <double>100000000000.000000000000000</double>
      </property>
      <property name="value">
       <double>0.000000000000000</double>
      </property>
     </widget>
    </widget>
   </widget>
  </widget>
  <widget class="QMenuBar" name="menubar">
   <property name="geometry">
    <rect>
     <x>0</x>
     <y>0</y>
     <width>498</width>
     <height>24</height>
    </rect>
   </property>
   <widget class="QMenu" name="menuFile">
    <property name="title">
     <string>File</string>
    </property>
   </widget>
   <widget class="QMenu" name="menugraphic">
    <property name="title">
     <string>graphic</string>
    </property>
   </widget>
   <addaction name="menuFile"/>
   <addaction name="menugraphic"/>
  </widget>
  <widget class="QStatusBar" name="statusbar"/>
 </widget>
 <customwidgets>
  <customwidget>
   <class>QCustomPlot</class>
   <extends>QWidget</extends>
   <header>view/qcustomplot.h</header>
   <container>1</container>
  </customwidget>
 </customwidgets>
 <resources/>
 <connections/>
 <buttongroups>
  <buttongroup name="group_functions"/>
  <buttongroup name="group_operators"/>
  <buttongroup name="group_nums"/>
  <buttongroup name="group_const"/>
 </buttongroups>
</ui>
